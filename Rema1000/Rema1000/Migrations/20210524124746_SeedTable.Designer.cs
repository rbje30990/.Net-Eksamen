// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Rema1000.Data;

namespace Rema1000.Migrations
{
    [DbContext(typeof(Rema1000Context))]
    [Migration("20210524124746_SeedTable")]
    partial class SeedTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Eksamensprojekt_Rema1000.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            Description = "You will eat it all day",
                            Name = "Cakes"
                        },
                        new
                        {
                            CategoryId = 2,
                            Description = "Used after eating cake",
                            Name = "Toothpaste"
                        });
                });

            modelBuilder.Entity("Eksamensprojekt_Rema1000.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Kilograms")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("QuantityInPackage")
                        .HasColumnType("int");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("SupplierId");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CategoryId = 1,
                            Description = "Yes please",
                            Kilograms = 1.5,
                            Name = "Cheesecake",
                            Price = 250.0,
                            QuantityInPackage = 1,
                            Stock = 30,
                            SupplierId = 1
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryId = 1,
                            Description = "But what about Andrea?",
                            Kilograms = 2.3999999999999999,
                            Name = "KajKage",
                            Price = 50.0,
                            QuantityInPackage = 5,
                            Stock = 1001,
                            SupplierId = 2
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryId = 2,
                            Description = "Wonderful taste",
                            Kilograms = 0.10000000000000001,
                            Name = "Colgate",
                            Price = 20.989999999999998,
                            QuantityInPackage = 3,
                            Stock = 1400,
                            SupplierId = 1
                        },
                        new
                        {
                            ProductId = 4,
                            CategoryId = 2,
                            Description = "Healthy mouth control paste",
                            Kilograms = 0.20000000000000001,
                            Name = "Jason",
                            Price = 35.0,
                            QuantityInPackage = 1,
                            Stock = 100,
                            SupplierId = 2
                        });
                });

            modelBuilder.Entity("Eksamensprojekt_Rema1000.Models.Supplier", b =>
                {
                    b.Property<int>("SupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ZipCode")
                        .HasColumnType("int");

                    b.HasKey("SupplierId");

                    b.ToTable("Supplier");

                    b.HasData(
                        new
                        {
                            SupplierId = 1,
                            Address = "Abildvej",
                            ContactPerson = "Mike Johnson",
                            Email = "mikeJohn@gmail.com",
                            Name = "Mike Johnson",
                            PhoneNumber = "+45 32 53 23 95",
                            ZipCode = 7100
                        },
                        new
                        {
                            SupplierId = 2,
                            Address = "Frejasgade",
                            ContactPerson = "Susanne Jensen",
                            Email = "susjensen@gmail.com",
                            Name = "Susanne Jensen",
                            PhoneNumber = "+45 74 66 84 61",
                            ZipCode = 8700
                        });
                });

            modelBuilder.Entity("Eksamensprojekt_Rema1000.Models.Product", b =>
                {
                    b.HasOne("Eksamensprojekt_Rema1000.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Eksamensprojekt_Rema1000.Models.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Supplier");
                });
#pragma warning restore 612, 618
        }
    }
}
